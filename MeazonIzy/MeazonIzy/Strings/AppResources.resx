<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="a1" xml:space="preserve">
    <value>1.Please email us at: support @meazon.com</value>
  </data>
  <data name="a10" xml:space="preserve">
    <value>10.Check your internet access and try again.</value>
  </data>
  <data name="a2" xml:space="preserve">
    <value>2.Internet connection is a structural element for this type of devices. However even if you dont have for a while scheduler is valid, but if you need further settings you can use windows application for on/off.</value>
  </data>
  <data name="a3" xml:space="preserve">
    <value>3.You can use windows app to add new plugs.To add your plug to another GW, you have to leave the current network (button/windows application) and then add this plug to a new gateway</value>
  </data>
  <data name="a4" xml:space="preserve">
    <value>4.Schedule is a total of rules that the user can set via the Meazon Izy application, to turn on an Izy-plug in repeated intervals throughout the week. For example: The lights of the garden are switched on daily, at 20.00-00.00 in the evening (switched off the rest of the day).</value>
  </data>
  <data name="a5" xml:space="preserve">
    <value>5.Not with Izy products. You can check Meazon's Bizy products.</value>
  </data>
  <data name="a6" xml:space="preserve">
    <value>6. You can share user rights with someone by entering his email from Google or Facebook account so he can control your Izy plugs too.</value>
  </data>
  <data name="a7" xml:space="preserve">
    <value>7.In all countries with schuko plug connectors and unrestricted access in Google or Facebook.</value>
  </data>
  <data name="a8" xml:space="preserve">
    <value>8.Google and Facebook are the two main providers we use for your secure and fast entry to our system. We will use these emails only to send you email newsletters for our products.</value>
  </data>
  <data name="a9" xml:space="preserve">
    <value>9.Wifi Gateway has four leds which are (from left to right) : the Zigbee led, the Internet Connection led, the Wifi connection led and the Power led.</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AccountTitle" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="DevicesTitle" xml:space="preserve">
    <value>Devices</value>
  </data>
  <data name="DisconectLabel" xml:space="preserve">
    <value>Sing Out</value>
  </data>
  <data name="FaqFull" xml:space="preserve">
    <value>Frequently Asked Questions</value>
  </data>
  <data name="FaqLabel" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="GeneralTitle" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="LanguageSettingsLabel" xml:space="preserve">
    <value>Display Language</value>
  </data>
  <data name="MasterTitleAndroid" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MasterTitleWindows" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="PrivacyLabel" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="ProviderLabel" xml:space="preserve">
    <value>Provider</value>
  </data>
  <data name="q1" xml:space="preserve">
    <value>1.How do I get support? Phone number or email?</value>
  </data>
  <data name="q10" xml:space="preserve">
    <value>10.What does the "OFFLINE" indication mean?</value>
  </data>
  <data name="q2" xml:space="preserve">
    <value>2.Do I need Internet connection all the time?What will happen if we have no internet connection for a while, day or more, (unpaid bill or technical problem)?</value>
  </data>
  <data name="q3" xml:space="preserve">
    <value>3.How do I add new Izy plugs and/or Gateways? How can I add my Izy plugs to another Gateway? How do I expand my ZigBee n/w (more plugs/GATEWAYs)</value>
  </data>
  <data name="q4" xml:space="preserve">
    <value>4.What is a scheduler and how do i set it up?</value>
  </data>
  <data name="q5" xml:space="preserve">
    <value>5.Can I measure electricity consumption from my Izy plug?</value>
  </data>
  <data name="q6" xml:space="preserve">
    <value>6.In the menu there is the choise "Users". What is that for?</value>
  </data>
  <data name="q7" xml:space="preserve">
    <value>7.In which countries can I use Meazon Izy plugs?</value>
  </data>
  <data name="q8" xml:space="preserve">
    <value>8.Why do you need a google or facebook account? What is the policy of protecting my personal information? How will your company use this account?</value>
  </data>
  <data name="q9" xml:space="preserve">
    <value>9.How can I be sure Wifi Gateway works properly every time? What are the indications?</value>
  </data>
  <data name="RenameTitle" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ScheduleTitle" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SoundLabel" xml:space="preserve">
    <value>Enable Sound Notifications</value>
  </data>
  <data name="State1" xml:space="preserve">
    <value>Always override schedule</value>
  </data>
  <data name="State2" xml:space="preserve">
    <value>Always ask to override</value>
  </data>
  <data name="State3" xml:space="preserve">
    <value>Do nothing</value>
  </data>
  <data name="StateLabel" xml:space="preserve">
    <value>Switch State Action</value>
  </data>
  <data name="UserNameLabel" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UsersTitle" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="AddLabel" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AdminHolder" xml:space="preserve">
    <value>example@example.com</value>
  </data>
  <data name="CancelLabel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="EditLabel" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="NullAlert" xml:space="preserve">
    <value>You must enter an email!</value>
  </data>
  <data name="SaveLabel" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ValidationAlert" xml:space="preserve">
    <value>Not a Valid Email!</value>
  </data>
  <data name="CoAdminsLabel" xml:space="preserve">
    <value>Coadmins</value>
  </data>
  <data name="DeleteLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AddAdminTitle" xml:space="preserve">
    <value>Add a Coadmin </value>
  </data>
  <data name="AlertLabel" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="DeleteAction" xml:space="preserve">
    <value>Delete Coadmin?</value>
  </data>
  <data name="EditAdminTitle" xml:space="preserve">
    <value>Edit CoAdmin</value>
  </data>
  <data name="NoAction" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="YesAction" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="OptionsLabel" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="AllDayLabel" xml:space="preserve">
    <value>All Day</value>
  </data>
  <data name="DaysTitle" xml:space="preserve">
    <value>Set Days</value>
  </data>
  <data name="DeviceLabel" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="FridayLabel" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="FriLabel" xml:space="preserve">
    <value>Fri</value>
  </data>
  <data name="FromTimeLabel" xml:space="preserve">
    <value>From Time</value>
  </data>
  <data name="MondayLabel" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="MonLabel" xml:space="preserve">
    <value>Mon</value>
  </data>
  <data name="RepeatLabel" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="RulesLabel" xml:space="preserve">
    <value>Rules:</value>
  </data>
  <data name="SatLabel" xml:space="preserve">
    <value>Sat</value>
  </data>
  <data name="SaturdayLabel" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="SundayLabel" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="SunLabel" xml:space="preserve">
    <value>Sun</value>
  </data>
  <data name="ThuLabel" xml:space="preserve">
    <value>Thu</value>
  </data>
  <data name="ThursdayLabel" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="TimeTitle" xml:space="preserve">
    <value>Set Time</value>
  </data>
  <data name="ToTimeLabel" xml:space="preserve">
    <value>To Time</value>
  </data>
  <data name="TueLabel" xml:space="preserve">
    <value>Tue</value>
  </data>
  <data name="TuesdayLabel" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="TurnOnLabel" xml:space="preserve">
    <value>Turn On</value>
  </data>
  <data name="ValueLabel" xml:space="preserve">
    <value>Value:</value>
  </data>
  <data name="WedLabel" xml:space="preserve">
    <value>Wed</value>
  </data>
  <data name="WednesdayLabel" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="WrongTimeLabel" xml:space="preserve">
    <value>Wrong Time Set!</value>
  </data>
  <data name="DisableScheduleQuestion" xml:space="preserve">
    <value>The device has a scheduler enabled!Do you want to deactivate it?</value>
  </data>
  <data name="OkAction" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>User Login</value>
  </data>
  <data name="SchedulesTitle" xml:space="preserve">
    <value>Schedules</value>
  </data>
</root>